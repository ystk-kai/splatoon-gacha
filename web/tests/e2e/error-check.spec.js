const { test, expect } = require('@playwright/test');

test.describe('„Ç®„É©„Éº„ÉÅ„Çß„ÉÉ„ÇØ', () => {
  test('„Éö„Éº„Ç∏„É≠„Éº„Éâ„Ç®„É©„Éº„ÅÆÁ¢∫Ë™ç', async ({ page }) => {
    // „Ç≥„É≥„ÇΩ„Éº„É´„Ç®„É©„Éº„ÇíË®òÈå≤
    const consoleErrors = [];
    page.on('console', msg => {
      if (msg.type() === 'error') {
        consoleErrors.push(msg.text());
        console.log('üî¥ Console Error:', msg.text());
      }
    });
    
    // „Éö„Éº„Ç∏„Ç¢„ÇØ„Çª„Çπ
    const response = await page.goto('/dashboard', { timeout: 15000 });
    console.log('Response Status:', response?.status());
    
    // „Éö„Éº„Ç∏„É≠„Éº„ÉâÂæÖÊ©ü
    await page.waitForTimeout(5000);
    
    // „Éö„Éº„Ç∏„Çø„Ç§„Éà„É´Á¢∫Ë™ç
    const title = await page.title();
    console.log('Page Title:', title);
    
    // „Éö„Éº„Ç∏„Ç≥„É≥„ÉÜ„É≥„ÉÑÁ¢∫Ë™ç
    const content = await page.content();
    console.log('Has content:', content.length > 1000);
    
    // ‰∏ªË¶ÅË¶ÅÁ¥†„ÇíÁ¢∫Ë™ç
    const hasReactRoot = await page.locator('#root').count();
    console.log('Has React root:', hasReactRoot > 0);
    
    // JavaScriptÂÆüË°åÁ¢∫Ë™ç
    const jsResult = await page.evaluate(() => {
      return {
        hasReact: typeof React !== 'undefined',
        hasReactDOM: typeof ReactDOM !== 'undefined',
        hasBabel: typeof Babel !== 'undefined',
        hasControlApp: typeof ControlApp !== 'undefined'
      };
    });
    console.log('JS Environment:', jsResult);
    
    // „Ç®„É©„Éº„Åå„Å™„ÅÑ„Åì„Å®„ÇíÁ¢∫Ë™ç
    if (consoleErrors.length > 0) {
      console.log('‚ùå JavaScript Errors Found:', consoleErrors);
    } else {
      console.log('‚úÖ No JavaScript Errors');
    }
    
    expect(consoleErrors.length).toBe(0);
  });
});